/*
 * NSX Manager API
 *
 * VMware NSX Manager REST API
 *
 * API version: 4.1.0.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package containerinventory

import "github.com/vmware/go-vmware-nsxt/common"

// Details of Container Ip Pool.
type ContainerIpPool struct {
	// The server will populate this field when returing the resource. Ignored on PUT and POST.
	Links []common.ResourceLink `json:"_links,omitempty"`
	// Schema for this resource
	Schema string                   `json:"_schema,omitempty"`
	Self   *common.SelfResourceLink `json:"_self,omitempty"`
	// Timestamp of last modification
	LastSyncTime int64 `json:"_last_sync_time,omitempty"`
	// Description of this resource
	Description string `json:"description,omitempty"`
	// Defaults to ID if not set
	DisplayName string `json:"display_name,omitempty"`
	// The type of this resource.
	ResourceType string `json:"resource_type"`
	// Specifies list of scope of discovered resource. e.g. if VHC path is associated with principal identity, who owns the discovered resource, then scope id will be VHC path and scope type will be VHC.
	Scope []DiscoveredResourceScope `json:"scope,omitempty"`
	// Opaque identifiers meaningful to the API user
	Tags []common.Tag `json:"tags,omitempty"`
	// Specifies identifier of the container cluster this container ip pool belongs to.
	ContainerClusterId string `json:"container_cluster_id,omitempty"`
	// Specifies identifier of the container ip pool.
	ExternalId string `json:"external_id"`
	// Specifies list of SubnetIpRange, which is a set of contiguous IP addresses, represented by a CIDR or a pair of start and end IPs, along with subnet definition.
	IpRanges []SubnetIpRange `json:"ip_ranges,omitempty"`
	// Specifies ip version of container ip pool.
	IpVersion int64 `json:"ip_version,omitempty"`
	// Array of additional specific properties of container ip pool in key-value format.
	OriginProperties []common.KeyValuePair `json:"origin_properties,omitempty"`
	// Specifies container ip pool specification.
	Spec string `json:"spec,omitempty"`
}
